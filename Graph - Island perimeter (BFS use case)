int islandPerimeter(vector<vector<int>>& grid) 
    {
        int n = grid.size();
        int m = grid[0].size();
        int perimeter=0;
        int row[] = {1,0,-1,0};
        int col[] = {0,1,0,-1};
        vector<vector<bool>> vis(n, vector<bool> (m,false));
        queue<pair<int,int>> q;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                if(grid[i][j]==1)
                {
                    q.push({i,j});
                    vis[i][j]=1;
                    while(!q.empty())
                    {
                        pair<int, int> front = q.front();
                        q.pop();
                        for(int k=0;k<4;k++)
                        {
                            int r = row[k]+front.first;
                            int c = col[k]+front.second;
                            if(r>=0 && r<n && c>=0 && c<m && vis[r][c]==0 && grid[r][c]==1)
                            {
                                q.push({r,c});
                                vis[r][c]=1;
                            }
                            else if(r<0 || r>=n || c<0 || c>=m || grid[r][c]==0)
                                perimeter++;
                        }
                    }
                    return perimeter;
                }
        
        return perimeter;
    }
